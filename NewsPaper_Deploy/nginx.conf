user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    upstream frontend_upstream {
        server frontend:80;
    }

    upstream backend_upstream {
        server backend:8081;
    }

    server {
        listen 80;
        server_name localhost;

        #API Ð¸ backend
        location ~ ^/(api|news|auth|admin|config)/ {
            rewrite ^/api/(.*)$ /$1 break;

            proxy_pass http://backend_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS
            add_header Access-Control-Allow-Origin "http://localhost" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;

            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        #Frontend
        location / {
            proxy_pass http://frontend_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /health {
            return 200 'ok';
            add_header Content-Type text/plain;
        }
    }
}
